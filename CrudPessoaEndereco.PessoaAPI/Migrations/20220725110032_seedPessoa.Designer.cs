// <auto-generated />
using System;
using CrudPessoaEndereco.PessoaAPI.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CrudPessoaEndereco.PessoaAPI.Migrations
{
    [DbContext(typeof(MySQLContext))]
    [Migration("20220725110032_seedPessoa")]
    partial class seedPessoa
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CadastroPessoaEndereco.PessoaAPI.Model.Endereco", b =>
                {
                    b.Property<Guid>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("EnderecoId");

                    b.Property<string>("Bairro")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("Bairro");

                    b.Property<string>("Cep")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("Cep");

                    b.Property<string>("Cidade")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("Cidade");

                    b.Property<string>("EstadoUf")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Estado");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("Logradouro");

                    b.Property<string>("Numero")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("Numero");

                    b.HasKey("EnderecoId");

                    b.ToTable("Endereco");

                    b.HasData(
                        new
                        {
                            EnderecoId = new Guid("04a4da82-44b4-46b1-a007-4494c9f26b36"),
                            Bairro = "Farolandia",
                            Cep = "49032490",
                            Cidade = "Aracaju",
                            EstadoUf = "SE",
                            Logradouro = "av.murilo dantas",
                            Numero = "1155"
                        },
                        new
                        {
                            EnderecoId = new Guid("707dfb0d-9b3e-4868-b046-963293356108"),
                            Bairro = "Conqueiros",
                            Cep = "5512460",
                            Cidade = "Barra",
                            EstadoUf = "SE",
                            Logradouro = "av.dantas",
                            Numero = "1157"
                        });
                });

            modelBuilder.Entity("CadastroPessoaEndereco.PessoaAPI.Model.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("Email");

                    b.Property<Guid>("EnderecoId")
                        .HasColumnType("char(36)")
                        .HasColumnName("EnderecoId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Pessoa");

                    b.HasData(
                        new
                        {
                            Id = new Guid("78673a06-2f37-451d-9524-bdaae5f6e685"),
                            Email = "jose@gmail.com",
                            EnderecoId = new Guid("04a4da82-44b4-46b1-a007-4494c9f26b36"),
                            Nome = "jose"
                        },
                        new
                        {
                            Id = new Guid("3e672a03-8e9f-41ac-bf52-cad17dbd66d8"),
                            Email = "rodney@gmail.com",
                            EnderecoId = new Guid("707dfb0d-9b3e-4868-b046-963293356108"),
                            Nome = "rodney"
                        });
                });

            modelBuilder.Entity("CadastroPessoaEndereco.PessoaAPI.Model.Pessoa", b =>
                {
                    b.HasOne("CadastroPessoaEndereco.PessoaAPI.Model.Endereco", "Endereco")
                        .WithMany("Pessoa")
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("CadastroPessoaEndereco.PessoaAPI.Model.Endereco", b =>
                {
                    b.Navigation("Pessoa");
                });
#pragma warning restore 612, 618
        }
    }
}
